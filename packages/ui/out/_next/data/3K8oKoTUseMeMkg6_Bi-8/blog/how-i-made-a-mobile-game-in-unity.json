{"pageProps":{"post":{"__typename":"Post","title":"How I made a mobile game in Unity","tags":["Unity","Android","Google Play Store"],"date":"2022-07-03","content":{"children":[{"type":"heading-two","children":[{"text":"Introduction"}]},{"type":"paragraph","children":[{"text":"For a long time, I've always wanted to release a game - wether that be on PC or mobile. Now it's easier than ever to do thanks to oppertunities like Steam Greenlight and how simple it is to register as a developer on the Google Play store. But why did I chose to make a mobile game? One simple reason -"},{"bold":true,"text":" KISS"},{"text":" (Keep it simple stupid!)","italic":true},{"text":". Mobile game naturally lend themselves to simpler mechanics and graphics. With PC games, the expectations are so much higher - that isn't to say there arn't games that do well on simpler graphics and mechanics - just look at Undertale. I've always started Unity projects but struggled to finish them due to too ambitious scope or having a great new idea. So for this project I wanted a"},{"bold":true,"text":" simple mechanic and graphics"},{"text":" so I can focus on building interesting levels, and learn how to get the app actually out into people's hands. "}]},{"type":"heading-two","children":[{"text":"What's the big idea?"}]},{"type":"paragraph","children":[{"text":"For my game, I wanted a simple concept that was inuitive to users and easy to build out. To this end, I came up with rotating triangles so that the colours in the corner match. "}]},{"src":"https://media.graphassets.com/zzarlzsqSMaSw6MC4c0u","type":"image","title":"triangualate-diagran.webp","width":969,"handle":"zzarlzsqSMaSw6MC4c0u","height":287,"children":[{"text":""}],"mimeType":"image/webp"},{"type":"paragraph","children":[{"text":"While this may seem too simple, there's so much room to expand on this idea. You could have: "}]},{"type":"bulleted-list","children":[{"type":"list-item","children":[{"type":"list-item-child","children":[{"text":"Different shapes"}]}]},{"type":"list-item","children":[{"type":"list-item-child","children":[{"text":"Different colours"}]}]},{"type":"list-item","children":[{"type":"list-item-child","children":[{"text":"Shapes that move other shapes when you rotate them"}]}]},{"type":"list-item","children":[{"type":"list-item-child","children":[{"text":"A mechaism where you have to place the shapes in the correct place"}]}]}]},{"type":"paragraph","children":[{"text":"Starting with a simple idea like this is a great way to limit the scope of your game early on and focus on building that core functionality and get it working. Then from that point, you can expand on it. "}]},{"type":"heading-two","children":[{"text":"How do I know my idea is fun?"}]},{"type":"paragraph","children":[{"text":"There's no point building out an entire game if no-one is going to enjoy playing it! To this end, I'd recommend building very basic prototype version of your game before getting into full development mode. Paper prototypes are a great way to try out your game with people. They give you great, valuable feedback early on with minimal effort to create in the first place. If they say it's not fun at this stage, it may be time to re-think your idea, rebuild the paper prototype and ask for more feedback. Once you're happy with the paper prototype, building a digital prototype is a natural next step. At this stage, it's important to focus on the core concept in one level - no music, fancy graphics etc. Once you've got feedback on your digital prototype, you can start building out your game from there - making sure to regularly get feedback from people. I followed this exact process when building my game. "}]},{"type":"heading-two","children":[{"text":"Why use Unity?"}]},{"type":"paragraph","children":[{"text":"I've been dabling in Unity for a long time so for me it made sense to use Unity. It offers great support for 2D, has built in mobile libraries and is generally considered one of the best game engines for mobile games. Unity uses"},{"bold":true,"text":" C#"},{"text":" as it's language of choice but there are also visual scripting options available such as Bolt. "}]},{"type":"paragraph","children":[{"text":"There are other options out there such as "},{"bold":true,"text":"Game Maker"},{"text":", "},{"bold":true,"text":"Godot"},{"text":" and "},{"bold":true,"text":"Unreal Engine"},{"text":". While I can't speak too much about the first two, Unreal Engine is generally suited for high-end, graphics intensive 3D games but this isn't a hard and fast rule.  "}]},{"type":"heading-two","children":[{"text":"Getting the game on Google Play"}]},{"type":"paragraph","children":[{"text":"Creating a developer account on Google Play is incredibly straight-forward. All you need to do is "},{"bold":true,"text":"pay $25"},{"text":" and you're in. You can use Google Play to create leaderboards, achievements and provide user authentication for you at no extra cost. As an added benefit, you can use it to distribute your builds to your testers easily just by sending them a URL. From Google Play you can then promote your releases to live so they're visible on the Play Store. "}]}]},"readTime":10,"coverImage":{"alt":"Mobile Game","__typename":"Asset","url":"https://media.graphassets.com/Y0GQXaVAQx6BA6VHVLRo","height":750,"width":1000}}},"__N_SSG":true}